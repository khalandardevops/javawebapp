pipeline {
    agent any
    
    environment {
             buildNumber = "${BUILD_NUMBER}"  // we can use like this also -->  buildNumber = "${env.BUILD_NUMBER}"
        }

    /*tools {
        // Install the Maven version configured as "M3" and add it to the path.
        maven "M3"
    }*/

    stages {
        stage('Checkout') {
            steps {
                // Get code from a GitHub repository
                git branch: 'main', credentialsId: 'Git_Cred', url: 'https://github.com/khalandardevops/javawebapp.git'
                }
                }
        stage('Build') {
            steps {
                // Run Maven on a Unix agent.
                sh "mvn clean package"
                echo "build Number is ${env.BUILD_NUMBER}"
                echo "build Number is ${BUILD_NUMBER}"
                echo "build Number is ${params.BUILD_NUMBER}"
                
                echo "build Number is ${buildNumber}"
            }
        }
        stage('Build Docker Image') {
            steps {                
                sh "docker build -t mohdkhalandar/javaewbappdockerdeclarativepipeline:${buildNumber} ."
            }
        }
        stage('Login and Push DockerImage to Docker Hub') {
            steps {            
                withCredentials([string(credentialsId: 'Docker_Hub_Secret_Key', variable: 'DockerHub_Cred')]) {
                sh "docker login -u mohdkhalandar -p ${DockerHub_Cred}"
                sh "docker push mohdkhalandar/javaewbappdockerdeclarativepipeline:${buildNumber}"
                }
            }
        }
        stage('Deploy Docker Image to Other Server'){
            steps{
                sshagent(['PemKey-Tomcat']) {
                    sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.47.85 docker rm -f javawebappdockerpipeline || true"
                    sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.47.85 docker create --name javawebappdockerpipeline -p 8081:8080 mohdkhalandar/javaewbappdockerdeclarativepipeline:${buildNumber}"
                    sh "ssh -o StrictHostKeyChecking=no ec2-user@172.31.47.85 docker start javawebappdockerpipeline"
                }
            }
        }
        
    }
}
